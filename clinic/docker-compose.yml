version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: clinic-postgres
    environment:
      POSTGRES_DB: clinic_db
      POSTGRES_USER: ${POSTGRES_USERNAME:-clinic_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-clinic_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    ports:
      - "5432:5432"
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-clinic_user} -d clinic_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: clinic-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin_pass}
      MONGO_INITDB_DATABASE: clinic_medical_history
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - clinic-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/clinic_medical_history --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot Application
  clinic-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clinic-app
    environment:
      SPRING_PROFILES_ACTIVE: production
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/clinic_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USERNAME:-clinic_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-clinic_pass}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: clinic_medical_history
      SPRING_DATA_MONGODB_USERNAME: ${MONGO_USERNAME:-clinic_user}
      SPRING_DATA_MONGODB_PASSWORD: ${MONGO_PASSWORD:-clinic_pass}
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: 86400000
      SERVER_PORT: 8080
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_APP_CLINIC: DEBUG
      ACTUATOR_ENDPOINTS: health,info,metrics,env,configprops
      ACTUATOR_HEALTH_DETAILS: when-authorized
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx Reverse Proxy (opcional, para HTTPS y load balancing)
  nginx:
    image: nginx:alpine
    container_name: clinic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - clinic-app
    networks:
      - clinic-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  clinic-network:
    driver: bridge