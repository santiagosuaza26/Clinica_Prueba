spring.application.name=clinic ips

# H2 Database Configuration (Default para desarrollo y pruebas)
spring.datasource.url=${DB_URL:jdbc:h2:mem:clinic_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.driver-class-name=${DB_DRIVER:org.h2.Driver}
spring.datasource.username=${DB_USERNAME:clinic_user}
spring.datasource.password=${DB_PASSWORD:clinic_pass}

# H2 Console (para desarrollo y pruebas)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=${H2_WEB_ALLOW_OTHERS:false}

# Security Configuration
spring.security.headers.frame=false

# JPA Configuration para H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.format-sql=true
spring.jpa.properties.hibernate.format_sql=true

# PostgreSQL Database Configuration (Producción)
spring.datasource-postgresql.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/clinic_db}
spring.datasource-postgresql.driver-class-name=org.postgresql.Driver
spring.datasource-postgresql.username=${POSTGRES_USERNAME:}
spring.datasource-postgresql.password=${POSTGRES_PASSWORD:}

# JPA Configuration para PostgreSQL
spring.jpa-postgresql.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa-postgresql.hibernate.ddl-auto=${POSTGRES_DDL_AUTO:update}
spring.jpa-postgresql.show-sql=${POSTGRES_SHOW_SQL:false}
spring.jpa-postgresql.format-sql=true
spring.jpa-postgresql.properties.hibernate.format_sql=true

# Configuración de paquetes para múltiples fuentes de datos
spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.implicit_naming_strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# MongoDB Configuration (Optional - disabled by default)
spring.data.mongodb.enabled=${MONGO_ENABLED:false}

# Logging
logging.level.app.clinic=${LOG_LEVEL:DEBUG}
logging.level.org.springframework.web=${SPRING_LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${HIBERNATE_LOG_LEVEL:DEBUG}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BINDER_LOG:TRACE}
logging.level.org.springframework.data.mongodb=${MONGO_LOG_LEVEL:DEBUG}

# Server Configuration
server.port=${SERVER_PORT:8080}

# JWT Configuration
jwt.secret=${JWT_SECRET:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjbGluaWNfaXBzIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}

# Actuator Configuration (Monitoring and Metrics)
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info,metrics,env,configprops}
management.endpoint.health.show-details=${ACTUATOR_HEALTH_DETAILS:when-authorized}
management.metrics.export.simple.enabled=${METRICS_ENABLED:true}
management.health.db.enabled=${HEALTH_DB_ENABLED:true}
management.health.mongo.enabled=${HEALTH_MONGO_ENABLED:true}
